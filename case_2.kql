// Feel like I'm getting close to something
// The problem is that there is not a standard time difference that can be used with bin(), or I at least I have not found it yet

Votes
| summarize by bin(Timestamp, 1800ms), vote, via_ip
| summarize Count=count() by vote
| as hint.materialized=true T
| extend Total = toscalar(T | summarize sum(Count))
| project vote, Percentage = round(Count*100.0 / Total, 1), Count
| order by Count

// Average difference between votes in order of Timestamp and via_ip
Votes
| where vote == "Poppy"
| order by Timestamp asc, via_ip
| extend nextTimestamp = next(Timestamp)
| project Duration = nextTimestamp - Timestamp
| summarize diff = avg(Duration)
// 00:00:00.0193729

// Summarise the votes per minute and then decompose anomalies to make it normalised
// Now, how to make this changes to the actual dataset
let max_t = toscalar(Votes | summarize max(Timestamp));
let min_t = toscalar(Votes | summarize min(Timestamp));
Votes
| where vote == "Poppy"
| summarize votes_per_minute=count() by bin(Timestamp, 10m), via_ip
| make-series sum(votes_per_minute) on Timestamp in range(min_t, max_t, 10m) by via_ip
| extend series_decompose_anomalies(sum_votes_per_minute)
